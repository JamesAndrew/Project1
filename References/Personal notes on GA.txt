Fitness is integer number based on how many vertcies are not valid in the graph. Don't care about how many conflicts each 
	specific vertex has, just that there is a conflict.
	
Populating parent set using tournament selection

Single-Point Crossover: (this will change)
	- Pick two individuals from the parent population NOT using tournament selection
	- Generate two new children
		- Child 1 gets the first half of parent 1's choromosomes and second half of parent 2's choromosomes
		- Child 2 gets the second half of parent 1's chromosomes and the first half of parent 1's choromosomes
	- No preference on which parent gets +1 chromosome for odd numbered sizes
	
Mutation: Pick n% of chromosomes in each child. If the chromosome does not have perfect fitness, give it a new random color 
	- Used ceiling function of mutation_rate * children_array.size to ensure mutation happens at least once
	
	
GA often gets trapped for larger graph sizes when there are less than 5 invalid nodes left. Ideas thus far are
	- Try different evolution strategies depending how fit the graph is 
	- Trapping is because the population gets loaded with identical individuals. Strategy to maintain diversity:
		- Smaller parent set size (1/3rd?)
		- Don't directly copy half and half of each parent chromosome, but add +1 (with wraparound) to the value from parent 1
		
	- Other crossover ideas:
		- 
		
Penalty Function
	- Exterior, additive penaltry function
	- Static Penalty strategy:
		- At the end of every generation, remove the bottom 20% of the population, replace with random individuals
		
To try for tomorrow:
	- The repair function actually seems to do some good.  See if a combination of repairing some of the parents 
		and mutating some of the children makes even better. Commit 4f6780067d91 works on occasion on size=70.
		
Run Results
	- We can easily make a graph of x-axis: graph size, y-axis: average decisions made / coloring success / etc. Would look great!
	
Future Work:
	- Better crossover from function
	- Find way to have color size = 3 to actually works
	- Use different strategies for different stages in the evolution